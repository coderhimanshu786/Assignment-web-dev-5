/*
Ans-4
    Features-
    1. let and const keywords :
                        The keyword "let" enables the users to define variables and on the other hand, "const" enables the users to define constants.
                        For example-
                        let i = 10;
                                    console.log(i);   //Output 10

                                    const PI = 3.14;
                                    console.log(PI);  //Output 3.14

    2. Arrow Functions :
                    ES6 provides a feature known as Arrow Functions. It provides a more concise syntax for writing function expressions by removing the "function" and "return" keywords.
                    For example

                        // Arrow function
                        let sumOfTwoNumbers = (a, b) => a + b;
                        console.log(sum(10, 20)); // Output 30

    3. Multi-line Strings :
                    ES6 also provides Multi-line Strings. Users can create multi-line strings by using back-ticks(`).

                    For example :
                        let greeting = `Hello World,     
                                        Greetings to all,
                                        Keep Belive on himself!`

    4. Default Parameters
                    In ES6, users can provide the default values right in the signature of the functions. But, in ES5, OR operator had to be used.
                    for example :

                                //ES6
                                let calculateArea = function(height = 100, width = 50) {  
                                    // logic
                                }

    5. Template Literals
                    ES6 introduces very simple string templates along with placeholders for the variables. The syntax for using the string template is ${PARAMETER} and is used inside of the back-ticked string.
                                for example :
                                let name = `My name is ${firstName} ${lastName}`

    6. Destructuring Assignment
                    Destructuring is one of the most popular features of ES6. The destructuring assignment is an expression that makes it easy to extract values from arrays, or properties from objects, into distinct variables.

                            for example :

                                //Array Destructuring
                                let fruits = ["Apple", "Banana"];
                                let [a, b] = fruits; // Array destructuring assignment
                                console.log(a, b);

    7. Enhanced Object Literals
                    ES6 provides enhanced object literals which make it easy to quickly create objects with properties inside the curly braces.
                    for example :

                                    function getMobile(manufacturer, model, year) {
                                    return {
                                        manufacturer,
                                        model,
                                        year
                                    }
                                    }
                                    getMobile("Samsung", "Galaxy", "2020");

    8. Promises :
                    In ES6, Promises are used for asynchronous execution. We can use promise with the arrow function.
                                
                    for example :

                                var asyncCall =  new Promise((resolve, reject) => {
                                // do something
                                resolve();
                                }).then(()=> {   
                                console.log('DON!');
                                })

    9. Classes
                    Previously, classes never existed in JavaScript. Classes are introduced in ES6 which looks similar to classes in other object-oriented languages, such as C++, Java, PHP, etc. 

    10. Modules
                    Previously, there was no native support for modules in JavaScript. ES6 introduced a new feature called modules,in which each module is represented by a separate ".js" file. We can use the "import" or "export" statement in a module to import or export variables, functions, classes or any other component from/to different files and modules.
                    for example :

                                    export var num = 50; 
                                    export function getName(fullName) {   
                                    //data
                                    };