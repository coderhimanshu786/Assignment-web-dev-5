/*
Ans-1
    Hoisting is JavaScript's default behavior of moving all declarations to the top of the current scope (to the top of the current script or the current function).

    JavaScript Declarations are Hoisted--

    In JavaScript, a variable can be declared after it has been used.

            for Example:
                        x = 5; // Assign 5 to x

                        elem = document.getElementById("example"); // Find an element
                        elem.innerHTML = x;                     // Display x in the element

                        var x; // Declaration

                        OR

                        var x; // Declaration
                            x = 5; // Assign 5 to x

                            elem = document.getElementById("example"); // Find an element
                            elem.innerHTML = x;                     // Display x in the element


        In case of Let and Const
            Variables defined with let and const are hoisted to the top of the block, but not initialized.

              Meaning: The block of code is aware of the variable, but it cannot be used until it has been declared.

             Using a let variable before it is declared will result in a "ReferenceError".

             FOR EXAMPLE:

             Output -- Reference Error

             case-Let
                                carName = "Volvo";
                                   let carName;         //declaration
            case- Const
                                   Output-- Error syntax
                                   carName = "Volvo";
                                    const carName;

                                    */

